spring:
  docker:
    compose:
      file: compose.yml
      lifecycle-management: start_and_stop

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: hero-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.yuzukiku.dockerquest.domain.entity"
        use.type.headers: false
        value.default.type: "com.yuzukiku.dockerquest.domain.entity.Monster"
    template:
      default-topic: monster-topic

  datasource:
    url: jdbc:postgresql://localhost:5432/dockerquest
    username: dockerquest_user
    password: password
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
#    show-sql: true #SQL クエリ確認用
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

logging:
  level:
#    org.springframework.kafka: debug　# Kafka確認用
    com.yuzukiku.dockerquest: debug # logger

management:
  endpoints:
    web:
      exposure:
        include: "*"
